version: "3.0"
services:
  wait-for-dep:
    build:
      context: .
    environment:
      PYTHONUNBUFFERED: 1
    volumes:
      # attach docker socket to test unix sockets
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      - https://www.google.com
      - http://nginx
      - tcp://nginx:80
      - unix:///var/run/docker.sock
      - psql://admin:example@postgres/db
      - mysql://admin:example@mysql/db
      - memcached://memcached/
      - amqp://admin:example@rabbitmq/vhost
      - kafka://kafka1:19092/,kafka://kafka2:19092/
      - redis://redis/5
      - mongodb://root:password@mongo/db

  nginx:
    image: nginx:1.19

  postgres:
    image: postgres:13.2
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: example
      POSTGRES_DB: db

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_USER: admin
      MYSQL_PASSWORD: example
      MYSQL_DATABASE: db
      MYSQL_RANDOM_ROOT_PASSWORD: "true"

  memcached:
    image: memcached:1.6

  rabbitmq:
    image: rabbitmq:3.8
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: example
      RABBITMQ_DEFAULT_VHOST: vhost
  
  redis:
    image: redis:3.0

  mongo:
    image: mongo:3.6.21
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password

  zookeeper: # for kafka
    image: zookeeper:3.4.9
    hostname: zookeeper
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888

  kafka1:
    image: confluentinc/cp-kafka:5.3.0
    hostname: kafka1
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 8
    depends_on:
      - zookeeper

  kafka2:
    image: confluentinc/cp-kafka:5.3.0
    hostname: kafka2
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka2:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 2
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 8
    depends_on:
      - zookeeper
